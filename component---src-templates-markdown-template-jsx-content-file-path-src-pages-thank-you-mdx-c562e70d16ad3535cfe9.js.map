{"version":3,"file":"component---src-templates-markdown-template-jsx-content-file-path-src-pages-thank-you-mdx-c562e70d16ad3535cfe9.js","mappings":"gMACWA,EAAe,6CCEX,SAASC,IAStB,OACEC,EAAAA,cAAA,aACEA,EAAAA,cAAA,aACEA,EAAAA,cAAA,UAXO,CACX,CACEC,KAAM,OACNC,IAAK,iBACLC,IAAK,iCAQKC,KAAKC,GAEPL,EAAAA,cAAA,MAAIM,UAAWC,GACbP,EAAAA,cAAA,OAAKQ,IAAKH,EAAQF,IAAKM,MAAM,QAAQC,IAAI,SACzCV,EAAAA,cAAA,SAAIK,EAAQJ,WAQ5B,CCxBA,SAASU,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,EAAG,MACFC,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC/B,OAAOpB,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBa,EAAYG,EAAG,KAAMhB,EAAAA,cAAoBa,EAAYI,GAAI,KAAM,+DAAgEjB,EAAAA,cAAoBa,EAAYK,EAAG,CACrOG,KAAM,oCACL,sCAAuC,KAAMrB,EAAAA,cAAoBa,EAAYG,EAAG,KAAM,sGAAuG,KAAMhB,EAAAA,cAAoBD,GAC5N,CAKA,MAJA,SAAoBa,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,MAAsBP,EAAMQ,YAC3E,OAAOG,EAAYvB,EAAAA,cAAoBuB,EAAWX,EAAOZ,EAAAA,cAAoBW,EAAmBC,IAAUD,EAAkBC,EAC9H,C,oICXA,MAAMY,EAAWC,IAA6B,IAA5B,SAACC,EAAQ,YAAEC,GAAYF,EACvC,OAAOzB,EAAAA,cAAoB4B,EAAAA,EAAQ,KAAM5B,EAAAA,cAAoB6B,EAAAA,EAAK,CAChEC,MAAOH,EAAYI,YAAYD,QAC7B9B,EAAAA,cAAoB,MAAO,CAC7BM,UAAWC,EAAAA,IACVP,EAAAA,cAAoB,KAAM,CAC3BM,UAAWC,EAAAA,IACVoB,EAAYI,YAAYD,OAAQ9B,EAAAA,cAAoB,MAAO,CAC5DM,UAAWC,EAAAA,IACVP,EAAAA,cAAoBgC,EAAAA,GAAa,KAAMN,KAAY,EAGzC,SAASO,EAAiBrB,GACvC,OAAOZ,EAAAA,cAAoBwB,EAAUZ,EAAOZ,EAAAA,cAAoBkC,EAAAA,QAAqBtB,GACvF,C,wGCnBO,IAAIuB,EAAoB,qDACpBC,EAAkB,mDAClBC,EAAgB,gD,8FC8BpB,MAAMC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBnB,GAC/B,MAAMoB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAflB,EACFA,EAAWoB,GAGb,IAAIA,KAAsBpB,IAChC,CAACoB,EAAmBpB,GACzB,CAGA,MAAMqB,EAAc,CAAC,EAQd,SAAST,GAAY,WAACZ,EAAU,SAAEM,EAAQ,qBAAEgB,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAftB,EACHA,EAAW,CAAC,GACZA,GAAcqB,EAEJF,EAAiBnB,GAG5B,gBACLkB,EAAWM,SACX,CAACC,MAAOF,GACRjB,EAEJ,C","sources":["webpack://disney-api-site/./src/components/thankYouTable/thankYouTable.module.css","webpack://disney-api-site/./src/components/thankYouTable/thankYouTable.jsx","webpack://disney-api-site/./src/pages/thankYou.mdx","webpack://disney-api-site/./src/templates/markdownTemplate.jsx","webpack://disney-api-site/./src/templates/markdownTemplate.module.css","webpack://disney-api-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var tableElement = \"thankYouTable-module--table-element--a87f7\";","import React from 'react'\nimport * as styles from './thankYouTable.module.css'\n\nexport default function ThankYouTable() {\n  const list = [\n    {\n      name: 'You?',\n      url: 'www.github.com',\n      img: 'https://placehold.co/100x100'\n    }\n  ]\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          {list.map((element) => {\n            return (\n              <td className={styles.tableElement}>\n                <img src={element.img} width=\"100px\" alt=\"test\" />\n                <b>{element.name}</b>\n              </td>\n            )\n          })}\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport ThankYouTable from '../components/thankYouTable/thankYouTable.jsx';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, React.createElement(_components.em, null, \"get featured on this website by supporting this project via \", React.createElement(_components.a, {\n    href: \"http://disneyapi.dev/support-us/\"\n  }, \"http://disneyapi.dev/support-us/\"))), \"\\n\", React.createElement(_components.p, null, \"Thank You for supporting this project, because of you, this project can continue to keep growing ✨\"), \"\\n\", React.createElement(ThankYouTable));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/disneyapi.dev/disneyapi.dev/src/pages/thankYou.mdx\";\nimport React from 'react';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport * as styles from './markdownTemplate.module.css';\nimport {MDXProvider} from '@mdx-js/react';\nconst Template = ({children, pageContext}) => {\n  return React.createElement(Layout, null, React.createElement(Seo, {\n    title: pageContext.frontmatter.title\n  }), React.createElement(\"div\", {\n    className: styles.templateContainer\n  }, React.createElement(\"h1\", {\n    className: styles.templateTitle\n  }, pageContext.frontmatter.title), React.createElement(\"div\", {\n    className: styles.templateContent\n  }, React.createElement(MDXProvider, null, children))));\n};\nTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var templateContainer = \"markdownTemplate-module--template-container--84f01\";\nexport var templateContent = \"markdownTemplate-module--template-content--9d4b8\";\nexport var templateTitle = \"markdownTemplate-module--template-title--4f95c\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["tableElement","ThankYouTable","React","name","url","img","map","element","className","styles","src","width","alt","_createMdxContent","props","_components","Object","assign","p","em","a","_provideComponents","components","href","wrapper","MDXLayout","Template","_ref","children","pageContext","Layout","Seo","title","frontmatter","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","templateContainer","templateContent","templateTitle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}