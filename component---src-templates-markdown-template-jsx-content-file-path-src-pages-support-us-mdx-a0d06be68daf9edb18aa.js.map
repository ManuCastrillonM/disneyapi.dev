{"version":3,"file":"component---src-templates-markdown-template-jsx-content-file-path-src-pages-support-us-mdx-a0d06be68daf9edb18aa.js","mappings":"oKAIA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,GAAI,KACJC,EAAG,IACHC,OAAQ,SACRC,GAAI,OACHC,EAAAA,EAAAA,MAAsBX,EAAMY,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBZ,EAAYG,GAAI,KAAM,cAAe,KAAMS,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,sEAAuE,KAAMQ,EAAAA,cAAoBZ,EAAYI,EAAG,KAAM,qRAAsRQ,EAAAA,cAAoBC,EAAAA,KAAM,CAC7jBC,GAAI,cACH,kBAAmB,8BAA+B,KAAMF,EAAAA,cAAoBZ,EAAYK,GAAI,KAAM,KAAMO,EAAAA,cAAoBZ,EAAYM,GAAI,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,CACtLQ,KAAM,+CACL,oBAAqB,KAAMH,EAAAA,cAAoBZ,EAAYM,GAAI,KAAMM,EAAAA,cAAoBZ,EAAYO,EAAG,CACzGQ,KAAM,+CACL,oBAAqB,MAAO,KAAMH,EAAAA,cAAoBZ,EAAYI,EAAG,KAAMQ,EAAAA,cAAoBZ,EAAYQ,OAAQ,KAAM,kBAAmB,KAAMI,EAAAA,cAAoBZ,EAAYS,GAAI,KAAM,2lBACjM,CAKA,UAJA,SAAoBV,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOiB,QAASC,GAAahB,OAAOC,OAAO,CAAC,GAAGQ,EAAAA,EAAAA,MAAsBX,EAAMY,YAC3E,OAAOM,EAAYL,EAAAA,cAAoBK,EAAWlB,EAAOa,EAAAA,cAAoBd,EAAmBC,IAAUD,EAAkBC,EAC9H,C,oICnBA,MAAMmB,EAAWC,IAA6B,IAA5B,SAACC,EAAQ,YAAEC,GAAYF,EACvC,OAAOP,EAAAA,cAAoBU,EAAAA,EAAQ,KAAMV,EAAAA,cAAoBW,EAAAA,EAAK,CAChEC,MAAOH,EAAYI,YAAYD,QAC7BZ,EAAAA,cAAoB,MAAO,CAC7Bc,UAAWC,EAAAA,IACVf,EAAAA,cAAoB,KAAM,CAC3Bc,UAAWC,EAAAA,IACVN,EAAYI,YAAYD,OAAQZ,EAAAA,cAAoB,MAAO,CAC5Dc,UAAWC,EAAAA,IACVf,EAAAA,cAAoBgB,EAAAA,GAAa,KAAMR,KAAY,EAGzC,SAASS,EAAiB9B,GACvC,OAAOa,EAAAA,cAAoBM,EAAUnB,EAAOa,EAAAA,cAAoBkB,EAAAA,QAAqB/B,GACvF,C,wGCnBO,IAAIgC,EAAoB,qDACpBC,EAAkB,mDAClBC,EAAgB,gD,8FC8BpB,MAAMC,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBxB,GAC/B,MAAMyB,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfvB,EACFA,EAAWyB,GAGb,IAAIA,KAAsBzB,IAChC,CAACyB,EAAmBzB,GACzB,CAGA,MAAM0B,EAAc,CAAC,EAQd,SAAST,GAAY,WAACjB,EAAU,SAAES,EAAQ,qBAAEkB,IAEjD,IAAIC,EAWJ,OAREA,EADED,EAEsB,mBAAf3B,EACHA,EAAW,CAAC,GACZA,GAAc0B,EAEJF,EAAiBxB,GAG5B,gBACLuB,EAAWM,SACX,CAACC,MAAOF,GACRnB,EAEJ,C","sources":["webpack://disney-api-site/./src/pages/supportUs.mdx","webpack://disney-api-site/./src/templates/markdownTemplate.jsx","webpack://disney-api-site/./src/templates/markdownTemplate.module.css","webpack://disney-api-site/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nimport {Link} from 'gatsby';\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    a: \"a\",\n    strong: \"strong\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h2, null, \"Support Us\"), \"\\n\", React.createElement(_components.p, null, \"Are you enjoying this project? You can support us in many ways! 😃\"), \"\\n\", React.createElement(_components.p, null, \"Join us in sustaining our open-source project! Your support helps cover monthly infrastructure costs and ensures its availability for everyone. Donate today to help maintain and enhance this valuable resource. Thank you for being a part of our journey! 🙏\\nTHANK YOU to the \", React.createElement(Link, {\n    to: \"/thank-you\"\n  }, \"amazing humans\"), \" who supports this project\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.buymeacoffee.com/manucastrillon\"\n  }, \"Buy me a coffee\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/sponsors/ManuCastrillonM\"\n  }, \"GitHub Sponsors\")), \"\\n\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Important note\"), \"\\n\", React.createElement(_components.em, null, \"Hello friends 👋 I developed this project in my free time, and the use of it is (and will continue to be) completely free. However, the infrastructure required to keep it running has a monthly cost, which I have been covering for the past three years (The cost is not very high, but it adds up over time). To keep the API available, I enabled multiple support alternatives where you can contribute to help cover the monthly expenses ✨ The availability of the service will depend on the support we receive. I appreciate your use of the API and hope that you can contribute to keeping it available 💖\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/disneyapi.dev/disneyapi.dev/src/pages/supportUs.mdx\";\nimport React from 'react';\nimport Layout from '../components/layout';\nimport Seo from '../components/seo';\nimport * as styles from './markdownTemplate.module.css';\nimport {MDXProvider} from '@mdx-js/react';\nconst Template = ({children, pageContext}) => {\n  return React.createElement(Layout, null, React.createElement(Seo, {\n    title: pageContext.frontmatter.title\n  }), React.createElement(\"div\", {\n    className: styles.templateContainer\n  }, React.createElement(\"h1\", {\n    className: styles.templateTitle\n  }, pageContext.frontmatter.title), React.createElement(\"div\", {\n    className: styles.templateContent\n  }, React.createElement(MDXProvider, null, children))));\n};\nTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Template, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\n","// extracted by mini-css-extract-plugin\nexport var templateContainer = \"markdownTemplate-module--template-container--84f01\";\nexport var templateContent = \"markdownTemplate-module--template-content--9d4b8\";\nexport var templateTitle = \"markdownTemplate-module--template-title--4f95c\";","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h2","p","ul","li","a","strong","em","_provideComponents","components","React","Link","to","href","wrapper","MDXLayout","Template","_ref","children","pageContext","Layout","Seo","title","frontmatter","className","styles","MDXProvider","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","templateContainer","templateContent","templateTitle","MDXContext","useMDXComponents","contextComponents","emptyObject","disableParentContext","allComponents","Provider","value"],"sourceRoot":""}